name: CI & CD Admin backend 

on:
  push:
    branches: [ master ]
    paths:
      - 'backend/**'
      - 'iac/backend/**'
  pull_request:
    branches: [ master ]
    paths:
      - 'backend/**'
      - 'iac/backend/**'
  workflow_dispatch:

jobs:
  ci-admin-backend:
    uses: ./.github/workflows/reusable-backend-ci.yml
    with:
      backend-path: 'backend'
      node-version: '20'

  cd-admin-backend:
    needs: ci-admin-backend
    permissions:
      id-token: write
      contents: read
    uses: ./.github/workflows/reusable-backend-cd.yml
    with:
      image-path: 'backend'
      image-uri: '084519756118.dkr.ecr.us-east-1.amazonaws.com/admin-api-lambda'
      branch-name: ${{ github.ref_name }}

  ci-admin-backend-terraform:
    needs: cd-admin-backend
    uses: ./.github/workflows/reusable-terraform-ci.yml
    with:
      terraform-path: 'iac/backend'

  generate-env-vars:
    needs: [cd-admin-backend]
    runs-on: ubuntu-latest
    outputs:
      env-vars: ${{ steps.generate-env-json.outputs.env-vars }}
    steps:
      - name: Generate environment variables JSON
        id: generate-env-json
        run: |
          cat << EOF > env-vars.json
          {
            "ENV": "production",
            "REGION": "us-east-1",
            "DEBUG": "false",
            "TF_VAR_SUPABASE_URL": "${{ vars.SUPABASE_URL }}",
            "TF_VAR_ADMIN_BACKEND_IMAGE_TAG": "${{ needs.cd-admin-backend.outputs.image-tag }}"
          }
          EOF

          echo "env-vars=$(cat env-vars.json | base64 -w 0)" >> $GITHUB_OUTPUT

  cd-admin-backend-terraform:
    needs: [ci-admin-backend-terraform, cd-admin-backend, generate-env-vars]
    permissions:
      id-token: write
      contents: read
    uses: ./.github/workflows/reusable-terraform-cd.yml
    with:
      terraform-path: 'iac/backend'
      env-vars: ${{ needs.generate-env-vars.outputs.env-vars }}
      branch-name: ${{ github.ref_name }}
    secrets: inherit
