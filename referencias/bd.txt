## 🧩 Modelo de base de datos sugerido (Prisma)

```prisma
// Configuración de la base de datos
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Modelo principal del restaurante
model Restaurant {
  id              Int           @id @default(autoincrement())
  name            String
  email           String        @unique
  password        String
  slug            String        @unique
  showPrices      Boolean       @default(true)
  isActive        Boolean       @default(true)
  phone           String?
  address         String?
  description     String?
  logoUrl         String?
  website         String?
  
  // Configuración de tema
  theme           Theme         @default(DEFAULT)
  primaryColor    String        @default("#1f2937")
  secondaryColor  String        @default("#f59e0b")
  fontFamily      String        @default("Inter")
  
  // Suscripción
  subscriptionId  String?       @unique
  planType        PlanType      @default(FREE)
  planExpiresAt   DateTime?
  stripeCustomerId String?
  
  // Relaciones
  categories      Category[]
  products        Product[]
  analytics       Analytics[]
  settings        RestaurantSettings?
  
  // Timestamps
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  
  @@map("restaurants")
}

// Configuración específica del restaurante
model RestaurantSettings {
  id              Int           @id @default(autoincrement())
  restaurantId    Int           @unique
  restaurant      Restaurant    @relation(fields: [restaurantId], references: [id], onDelete: Cascade)
  
  // Configuración de menú
  showDescription Boolean       @default(true)
  showImages      Boolean       @default(true)
  
  // Analytics
  analyticsEnabled Boolean      @default(true)
  
  // Idioma
  defaultLanguage Language      @default(ES)
  
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  
  @@map("restaurant_settings")
}

// Categorías de productos
model Category {
  id              Int           @id @default(autoincrement())
  name            String
  nameEn          String?       // Nombre en inglés
  description     String?
  descriptionEn   String?
  order           Int
  isVisible       Boolean       @default(true)
  imageUrl        String?
  
  restaurantId    Int
  restaurant      Restaurant    @relation(fields: [restaurantId], references: [id], onDelete: Cascade)
  products        Product[]
  
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  
  @@map("categories")
}

// Productos
model Product {
  id              Int           @id @default(autoincrement())
  name            String
  nameEn          String?       // Nombre en inglés
  description     String?
  descriptionEn   String?
  price           Float
  currency        String        @default("USD")
  visible         Boolean       @default(true)
  featured        Boolean       @default(false)
  
  // Imágenes
  imageUrl        String?
  imageVisible    Boolean       @default(true)
  

  
  // Relaciones
  restaurantId    Int
  categoryId      Int
  restaurant      Restaurant    @relation(fields: [restaurantId], references: [id], onDelete: Cascade)
  category        Category      @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  
  // Timestamps
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  
  @@map("products")
}



// Analytics y estadísticas
model Analytics {
  id              Int           @id @default(autoincrement())
  restaurantId    Int
  restaurant      Restaurant    @relation(fields: [restaurantId], references: [id], onDelete: Cascade)
  
  // Datos de visita
  pageViews       Int           @default(0)
  uniqueVisitors  Int           @default(0)
  sessionDuration Int?          // en segundos
  
  // Datos del visitante
  userAgent       String?
  ipAddress       String?
  country         String?
  city            String?
  deviceType      DeviceType?
  
  // Timestamp
  date            DateTime      @default(now())
  
  @@map("analytics")
}



// Enums
enum PlanType {
  FREE
  BASIC
  PROFESSIONAL
  ENTERPRISE
}

enum Theme {
  DEFAULT
  DARK
  LIGHT
  CUSTOM
}

enum Language {
  ES
  EN
}

enum DeviceType {
  MOBILE
  TABLET
  DESKTOP
}

